
#if 0
// Windows needs to know abit about our compilation target
#define _MSC_VER 1929
#define _MSC_FULL_VER 192930133

#define _M_AMD64 100
#define _AMD64_
#define _M_IX86 100 

#define WINDOWS_IGNORE_PACKING_MISMATCH 1 // windows.h has strange assertions that compiler has a hard time parsing
#define WINVER 0x0A00
#define _WIN32_WINNT 0x0A00



#define NOCOMM // no COM API crap
#define WIN32_LEAN_AND_MEAN // maybe we will get rid of some garbage?

#include "windows.h"

#else
#include "tinywindows.h"
#endif

//#define PRINT_AST 1
//#define PRINT_BYTECODE 1

LRESULT CALLBACK
win32_main_callback(HWND window, UINT message, WPARAM w_param, LPARAM l_param) {
    return DefWindowProcA(window, message, w_param, l_param);
}


int
main() {
    HINSTANCE h_instance = GetModuleHandleA(0);
    
    WNDCLASSA wndclass;
    wndclass.style = CS_HREDRAW | CS_VREDRAW;
    wndclass.lpfnWndProc = win32_main_callback;
    wndclass.hInstance = h_instance;
    wndclass.lpszClassName = "PlatfomerWindowClass";
    
    if (RegisterClassA(&wndclass)) {
        //debug_break();
        HWND window = CreateWindowExA(0,
                                      "PlatfomerWindowClass",
                                      "Platformer",
                                      WS_OVERLAPPEDWINDOW | WS_VISIBLE,
                                      CW_USEDEFAULT,
                                      CW_USEDEFAULT,
                                      640, 480,
                                      0, 0,
                                      wndclass.hInstance,
                                      0);
    } else {
        pln("Failed to create a window")
    }
    
}
