#define _MSVC_LANG 201703
//#include <sal.h>


int 
main() {
    // ifdef
#define DEBUG
#ifdef DEBUG
    pln("1. OK!");
#else
    pln("1. fail");
#endif
#undef DEBUG
    
    // ifndef
#ifndef NDEBUG
    pln("2. OK!");
#else
    pln("2. fail");
#endif
    
    // if true
#if 1
    pln("3. OK!");
#else
    pln("3. fail");
#endif
    
    // if false
#if 0
    pln("4. fail");
#else
    pln("4. OK!");
#endif
    
    // if identifier
#define BUILD_DEBUG 1
#if BUILD_DEBUG
    pln("5. OK!");
#else
    pln("5. fail");
#endif
#undef BUILD_DEBUG
    
    // if condition
#define WINVER 0x0500
#if(WINVER >= 0x0400)
    pln("6. OK!");
#else
    pln("6. fail");
#endif
#undef WINVER
    
    // if equation
#define EQUATION (320 + 43)
#if (EQUATION > 330)
    pln("7. OK!");
#else
    pln("7. fail");
#endif
#undef EQATIOn
    
    // if defined
#define TEST
#if defined TEST
    pln("8. OK!");
#else
    pln("8. fail");
#endif
#undef TEST
    
#if !defined(TEST)
    pln("9. OK!");
#else
    pln("9. fail");
#endif
    
    // if elif endif
#define LEVEL 3
#if LEVEL > 5
    pln("10. fail");
#elif LEVEL > 2
    pln("10. OK!");
#else
    pln("10. fail");
#endif
    
    // Nested function calls
#define min(a, b) (a) < (b) ? (a) : (b)
#define max(a, b) (a) > (b) ? (a) : (b)
    
    int a = 20;
    int b = 30;
    int c = 10;
    
    pln("min of a, b and c = %", min(a, min(b, c)));
    pln("max of a, b and c = %", max(a, max(b, c)));
    
    // Detect cycles
#define INC(x) (x + 1)
#define ONE_PLUS_ONE (1 + 1)
#define DEF_AST_NODE(name) pln("%", f_int(name));
#define AST_IDENT   DEF_AST_NODE(INC(1) + ONE_PLUS_ONE + MA + MA)
    
#define MA MB
#define MB MC
#define MC MA
    
    
    AST_IDENT
}
